{"version":3,"file":"index-B54R63Ic.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/constants/categories.ts","../../src/utils/index.ts","../../src/components/Timer.tsx","../../src/components/TodoItem.tsx","../../src/components/TodoList.tsx","../../src/components/ComboBox.tsx","../../src/components/TodoInput.tsx","../../src/hooks/useTodos.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// Shared category options for the todo application\nexport const CATEGORY_OPTIONS = [\n  { value: '', label: 'No Category' },\n  { value: 'work', label: '💼 Work' },\n  { value: 'personal', label: '👤 Personal' },\n  { value: 'shopping', label: '🛒 Shopping' },\n  { value: 'health', label: '🏥 Health' },\n  { value: 'finance', label: '💰 Finance' },\n  { value: 'home', label: '🏠 Home' },\n  { value: 'education', label: '📚 Education' },\n  { value: 'travel', label: '✈️ Travel' },\n  { value: 'hobby', label: '🎨 Hobby' },\n  { value: 'urgent', label: '🔥 Urgent' },\n];\n\n// Helper function to get category label by value\nexport const getCategoryLabel = (value: string): string => {\n  if (!value) return '';\n  \n  const option = CATEGORY_OPTIONS.find(opt => opt.value === value);\n  if (option) {\n    return option.label;\n  }\n  \n  // For custom categories, add a generic tag emoji if it doesn't have one\n  const hasEmoji = /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F700}-\\u{1F77F}]|[\\u{1F780}-\\u{1F7FF}]|[\\u{1F800}-\\u{1F8FF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]/u.test(value);\n  return hasEmoji ? value : `🏷️ ${value}`;\n};","// Export utility functions here\nexport const generateId = (): string => {\n  return Math.random().toString(36).substring(2) + Date.now().toString(36);\n};\n\n// Time remaining calculation utility\nexport interface TimeRemaining {\n  days: number;\n  hours: number;\n  minutes: number;\n  isOverdue: boolean;\n  totalMinutes: number;\n}\n\nexport const calculateTimeRemaining = (dueDate: Date): TimeRemaining => {\n  const now = new Date();\n  \n  // Set the due date to 23:59:59 of the given date\n  const dueDateEndOfDay = new Date(dueDate);\n  dueDateEndOfDay.setHours(23, 59, 59, 999);\n  \n  // Calculate difference in milliseconds\n  const diffMs = dueDateEndOfDay.getTime() - now.getTime();\n  const isOverdue = diffMs < 0;\n  \n  // Use absolute value for calculations\n  const absDiffMs = Math.abs(diffMs);\n  \n  // Convert to minutes, hours, days\n  const totalMinutes = Math.floor(absDiffMs / (1000 * 60));\n  const days = Math.floor(totalMinutes / (24 * 60));\n  const hours = Math.floor((totalMinutes % (24 * 60)) / 60);\n  const minutes = totalMinutes % 60;\n  \n  return {\n    days,\n    hours,\n    minutes,\n    isOverdue,\n    totalMinutes\n  };\n};\n\nexport const formatTimeRemaining = (timeRemaining: TimeRemaining): string => {\n  const { days, hours, minutes, isOverdue } = timeRemaining;\n  \n  if (isOverdue) {\n    if (days > 0) {\n      return `${days}d overdue`;\n    } else if (hours > 0) {\n      return `${hours}h ${minutes}m overdue`;\n    } else {\n      return `${minutes}m overdue`;\n    }\n  } else {\n    if (days > 0) {\n      return `${days}d ${hours}h remaining`;\n    } else if (hours > 0) {\n      return `${hours}h ${minutes}m remaining`;\n    } else {\n      return `${minutes}m remaining`;\n    }\n  }\n};","import { useState, useEffect } from 'react';\nimport { Clock, AlertTriangle } from 'lucide-react';\nimport { calculateTimeRemaining, formatTimeRemaining, TimeRemaining } from '../utils';\n\ninterface TimerProps {\n  dueDate: Date;\n  isCompleted?: boolean;\n}\n\n/**\n * Timer Component\n * \n * Shows a real-time countdown timer for todo items with due dates:\n * - Updates every minute to show accurate time remaining\n * - Shows days, hours, and minutes remaining\n * - Changes appearance when overdue\n * - Uses 23:59:59 as end of day for calculations\n * - Pauses updates for completed todos\n */\nexport default function Timer({ dueDate, isCompleted = false }: TimerProps) {\n  const [timeRemaining, setTimeRemaining] = useState<TimeRemaining>(() => \n    calculateTimeRemaining(dueDate)\n  );\n\n  // Update timer every minute\n  useEffect(() => {\n    if (isCompleted) {\n      // Don't update timer for completed todos\n      return;\n    }\n\n    const updateTimer = () => {\n      setTimeRemaining(calculateTimeRemaining(dueDate));\n    };\n\n    // Update immediately\n    updateTimer();\n\n    // Set up interval to update every minute\n    const interval = setInterval(updateTimer, 60000); // 60 seconds\n\n    return () => clearInterval(interval);\n  }, [dueDate, isCompleted]);\n\n  const formattedTime = formatTimeRemaining(timeRemaining);\n  const isOverdue = timeRemaining.isOverdue && !isCompleted;\n  const isUrgent = !isCompleted && !isOverdue && timeRemaining.totalMinutes < 1440; // Less than 24 hours\n\n  return (\n    <div \n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: '3px',\n        padding: '2px 6px',\n        borderRadius: '6px',\n        fontSize: '10px',\n        fontWeight: '600',\n        whiteSpace: 'nowrap',\n        background: isOverdue \n          ? 'rgba(239, 68, 68, 0.15)' // Red background for overdue\n          : isUrgent \n          ? 'rgba(245, 158, 11, 0.15)' // Orange background for urgent (< 24h)\n          : 'rgba(59, 130, 246, 0.1)', // Blue background for normal\n        color: isOverdue \n          ? '#dc2626' // Red text for overdue\n          : isUrgent \n          ? '#d97706' // Orange text for urgent\n          : '#2563eb', // Blue text for normal\n        border: `1px solid ${\n          isOverdue \n          ? 'rgba(239, 68, 68, 0.3)' \n          : isUrgent \n          ? 'rgba(245, 158, 11, 0.3)' \n          : 'rgba(59, 130, 246, 0.2)'\n        }`,\n        transition: 'all 0.3s ease'\n      }}\n      title={`Due: ${dueDate.toLocaleDateString()} at 11:59 PM`}\n    >\n      {isOverdue ? (\n        <AlertTriangle size={10} />\n      ) : (\n        <Clock size={10} />\n      )}\n      {formattedTime}\n    </div>\n  );\n}","// Import dependencies for todo item functionality\nimport { Todo } from '../types';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\n// Import modern icons from Lucide React\nimport { Check, Clock, GripVertical, Trash2, Calendar, Tag } from 'lucide-react';\n// Import shared category constants\nimport { getCategoryLabel } from '../constants/categories';\n// Import Timer component for due date countdown\nimport Timer from './Timer';\n\n// Props interface for TodoItem component\ninterface TodoItemProps {\n  todo: Todo;                              // Todo data object\n  onToggle: (id: string) => void;          // Function to toggle completion status\n  onDelete: (id: string) => void;          // Function to delete the todo\n  showDragHandle?: boolean;                // Whether to show drag handle for reordering\n}\n\n/**\n * TodoItem Component\n * \n * Renders an individual todo item with:\n * - Drag and drop functionality for reordering\n * - Interactive checkbox for marking complete/incomplete\n * - Text display with truncation for long content\n * - Due date and category badges\n * - Status indicator badge\n * - Delete button with hover effects\n * \n * Features strict single-row layout to prevent wrapping\n */\nexport default function TodoItem({ todo, onToggle, onDelete, showDragHandle = true }: TodoItemProps) {\n  // Initialize drag and drop functionality using @dnd-kit\n  const {\n    attributes,      // Accessibility attributes for screen readers\n    listeners,       // Event handlers for drag operations\n    setNodeRef,      // Reference to the draggable DOM element\n    transform,       // Current transform state during drag\n    transition,      // CSS transition for smooth animations\n    isDragging,      // Boolean indicating if item is currently being dragged\n  } = useSortable({ id: todo.id });\n\n  // Dynamic styles for drag and drop visual feedback\n  const style = {\n    transform: CSS.Transform.toString(transform),  // Apply drag transform\n    transition,                                    // Smooth transitions\n    opacity: isDragging ? 0.5 : 1,                // Fade effect while dragging\n  };\n\n  return (\n    <div \n      ref={setNodeRef}                    // Attach drag and drop reference\n      style={style}                       // Apply dynamic drag styles\n      id={`todo-item-${todo.id}`}         // Unique identifier for each item\n      className={`todo-item glass-card rounded-xl shadow-lg group border border-white/30 w-full ${todo.completed ? 'opacity-80' : ''}`}\n      {...attributes}                     // Spread accessibility attributes\n    >\n      {/* Outer padding container */}\n      <div \n        style={{\n          padding: '8px',                 // Consistent padding around content\n          boxSizing: 'border-box'         // Include padding in size calculations\n        }}\n      >\n        {/* Main content row - strict single-line layout */}\n        <div \n          style={{\n          display: 'flex',                // Horizontal flexbox layout\n          alignItems: 'center',           // Vertically center all elements\n          justifyContent: 'space-between', // Distribute space between elements\n          gap: '8px',                     // Consistent spacing between elements\n          height: '40px',                 // Fixed height to prevent expanding\n          width: '100%',                  // Full width utilization\n          flexWrap: 'nowrap',             // Prevent wrapping to new lines\n          overflow: 'hidden',             // Hide overflow content\n          boxSizing: 'border-box',        // Include padding in calculations\n          padding: '5px'                  // Inner padding for breathing room\n        }}\n      >\n        {/* Drag Handle - Only shown when reordering is enabled (not during search) */}\n        {showDragHandle && (\n          <div \n            {...listeners}                     // Attach drag event listeners to handle only\n            style={{\n              flexShrink: 0,                  // Don't shrink when space is limited\n              width: '20px',                  // Fixed width for consistent layout\n              height: '20px',                 // Fixed height matching other elements\n              display: 'flex',                // Center the drag icon\n              alignItems: 'center',           // Vertical centering\n              justifyContent: 'center',       // Horizontal centering\n              cursor: 'grab',                 // Visual feedback for draggable element\n              color: '#9ca3af',               // Subtle gray color\n            }}\n            title=\"Drag to reorder\"            // Tooltip for user guidance\n          >\n            <GripVertical size={16} />        {/* Modern grip icon for dragging */}\n          </div>\n        )}\n        \n        {/* Custom Checkbox - Interactive completion toggle */}\n        <div \n          style={{\n            flexShrink: 0,                  // Maintain size when space is limited\n            width: '20px',                  // Container width for checkbox\n            height: '20px',                 // Container height matching row height\n            display: 'flex',                // Center the checkbox element\n            alignItems: 'center',           // Vertical alignment\n            justifyContent: 'center'        // Horizontal alignment\n          }}\n        >\n          {/* Hidden native checkbox for accessibility and form handling */}\n          <input\n            type=\"checkbox\"\n            checked={todo.completed}                    // Reflects current completion state\n            onChange={() => onToggle(todo.id)}         // Triggers state change\n            style={{display: 'none'}}                  // Hidden - we use custom styling\n            id={`todo-${todo.id}`}                     // Unique ID for label association\n          />\n          {/* Custom styled checkbox label */}\n          <label\n            htmlFor={`todo-${todo.id}`}                // Associates with hidden input\n            style={{\n              width: '18px',                           // Checkbox size\n              height: '18px',                          // Square aspect ratio\n              borderRadius: '50%',                     // Circular checkbox design\n              border: '2px solid #d1d5db',             // Default border color\n              cursor: 'pointer',                       // Interactive cursor\n              display: 'flex',                         // Center checkmark icon\n              alignItems: 'center',                    // Vertical centering\n              justifyContent: 'center',                // Horizontal centering\n              fontSize: '12px',                        // Checkmark size\n              background: todo.completed               // Dynamic background based on state\n                ? 'linear-gradient(135deg, #10b981, #3b82f6)'  // Completed: gradient\n                : 'rgba(255,255,255,0.6)',                     // Incomplete: semi-transparent\n              borderColor: todo.completed ? '#10b981' : '#d1d5db',  // Dynamic border\n              color: 'white',                          // Checkmark color\n              transition: 'all 0.3s ease',            // Smooth state transitions\n              fontWeight: '600'                        // Bold checkmark\n            }}\n          >\n            {todo.completed && <Check size={14} />}    {/* Modern check icon when completed */}\n          </label>\n        </div>\n\n        {/* Todo Text Container - Flexible text area with inline badges */}\n        <div\n          style={{\n            flex: '1',                      // Take up remaining available space\n            minWidth: '0',                  // Allow flexbox to shrink below content width\n            overflow: 'hidden',             // Hide overflow to enable ellipsis\n            height: '100%',                 // Full height of container\n            display: 'flex',                // Horizontal layout for text and badges\n            alignItems: 'center',           // Center all content vertically\n            gap: '8px'                      // Space between text and badges\n          }}\n        >\n          {/* Main todo text with truncation and completion styling */}\n          <span\n            title={todo.text}                        // Tooltip shows full text on hover\n            style={{\n              whiteSpace: 'nowrap',                  // Prevent text wrapping\n              overflow: 'hidden',                    // Hide overflowing text\n              textOverflow: 'ellipsis',              // Add \"...\" for truncated text\n              fontSize: '15px',                      // Readable text size\n              fontWeight: '500',                     // Medium font weight\n              color: todo.completed ? '#9ca3af' : '#374151',  // Gray when completed\n              textDecoration: todo.completed ? 'line-through' : 'none',  // Strike-through when done\n              flex: '1',                             // Take remaining space for text\n              minWidth: '0',                         // Allow shrinking\n              transition: 'color 0.3s ease'         // Smooth color transitions\n            }}\n          >\n            {todo.text}                              {/* Display the todo text */}\n          </span>\n          \n          {/* Inline badges for due date and category */}\n          <div \n            style={{\n              display: 'flex',                // Horizontal layout for badges\n              alignItems: 'center',           // Vertical alignment\n              gap: '6px',                     // Smaller space between badges for inline display\n              flexShrink: 0                   // Don't shrink the badges\n            }}\n          >\n            {/* Due Date with Timer - Shows countdown for pending todos, date only for completed */}\n            {todo.dueDate && (\n              <>\n                {/* Real-time countdown timer - only for pending todos */}\n                {!todo.completed && (\n                  <Timer dueDate={todo.dueDate} isCompleted={todo.completed} />\n                )}\n                {/* Static date badge for reference */}\n                <span \n                  style={{\n                    background: 'rgba(156, 163, 175, 0.1)',  // Light gray background\n                    color: '#6b7280',                         // Gray text\n                    padding: '2px 6px',                       // Compact padding\n                    borderRadius: '6px',                      // Smaller rounded corners for inline\n                    fontSize: '10px',                         // Small badge text\n                    fontWeight: '600',                        // Bold for visibility\n                    display: 'flex',                          // Flex for icon alignment\n                    alignItems: 'center',                     // Center icon with text\n                    gap: '2px',                               // Smaller gap for inline display\n                    whiteSpace: 'nowrap'                      // Prevent wrapping\n                  }}\n                >\n                  <Calendar size={10} />                      {/* Clean calendar icon */}\n                  {todo.dueDate.toLocaleDateString()}         {/* Formatted date */}\n                </span>\n              </>\n            )}\n            {/* Category Badge - Shows when todo has a category */}\n            {todo.category && (\n              <span \n                style={{\n                  background: 'rgba(139, 92, 246, 0.1)', // Light purple background\n                  color: '#8b5cf6',                       // Purple text\n                  padding: '2px 6px',                     // Compact padding\n                  borderRadius: '6px',                    // Smaller rounded corners for inline\n                  fontSize: '10px',                       // Small badge text\n                  fontWeight: '600',                      // Bold for visibility\n                  display: 'flex',                        // Flex for icon alignment\n                  alignItems: 'center',                   // Center icon with text\n                  gap: '2px',                             // Smaller gap for inline display\n                  whiteSpace: 'nowrap'                    // Prevent wrapping\n                }}\n              >\n                <Tag size={10} />                         {/* Tag icon for categories */}\n                {getCategoryLabel(todo.category)}         {/* Category name with emoji */}\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Status Badge - Visual completion indicator */}\n        <div \n          style={{\n            flexShrink: 0,                    // Don't shrink when space is limited\n            padding: '4px 8px',               // Comfortable padding for badge\n            borderRadius: '12px',             // Rounded badge appearance\n            fontSize: '10px',                 // Small, readable text\n            fontWeight: '600',                // Bold for emphasis\n            whiteSpace: 'nowrap',             // Prevent text wrapping\n            background: todo.completed        // Dynamic background based on completion\n              ? 'linear-gradient(135deg, #dcfce7, #bbf7d0)'  // Completed: green gradient\n              : 'linear-gradient(135deg, #dbeafe, #e0e7ff)', // Pending: blue gradient\n            color: todo.completed ? '#15803d' : '#1e40af',   // Text color matches background\n            border: todo.completed ? '1px solid #22c55e' : '1px solid #3b82f6', // Subtle border\n            transition: 'all 0.3s ease'      // Smooth transitions when state changes\n          }}\n        >\n          {/* Status icon - modern check for completed, clock for pending */}\n          {todo.completed ? <Check size={12} /> : <Clock size={12} />}\n        </div>\n\n        {/* Delete Button - Always visible with hover effects */}\n        <button\n          onClick={() => onDelete(todo.id)}     // Trigger delete action\n          style={{\n            flexShrink: 0,                      // Maintain size when space is limited\n            width: '32px',                      // Fixed button size\n            height: '32px',                     // Square button\n            border: 'none',                     // Clean appearance\n            borderRadius: '6px',                // Slightly rounded corners\n            background: '#dc2626',              // Solid red background\n            color: 'white',                     // White text/icon\n            fontSize: '18px',                   // Large, visible icon\n            cursor: 'pointer',                  // Interactive cursor\n            opacity: 0.7,                       // Slightly transparent at rest\n            display: 'flex',                    // Center the delete icon\n            alignItems: 'center',               // Vertical centering\n            justifyContent: 'center',           // Horizontal centering\n            outline: 'none',                    // Remove focus outline\n            transition: 'all 0.3s ease',       // Smooth hover transitions\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)' // Subtle shadow\n          }}\n          title=\"Delete todo\"                   // Tooltip for user guidance\n          // Hover effect - increase opacity and scale\n          onMouseEnter={(e) => {\n            (e.target as HTMLButtonElement).style.opacity = '1';\n            (e.target as HTMLButtonElement).style.transform = 'scale(1.1)';\n            (e.target as HTMLButtonElement).style.boxShadow = '0 4px 8px rgba(0,0,0,0.2)';\n          }}\n          // Return to normal state when hover ends\n          onMouseLeave={(e) => {\n            (e.target as HTMLButtonElement).style.opacity = '0.7';\n            (e.target as HTMLButtonElement).style.transform = 'scale(1)';\n            (e.target as HTMLButtonElement).style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n          }}\n        >\n          <Trash2 size={16} />\n        </button>\n        </div>\n      </div>\n    </div>\n  );\n}","import { Todo } from '../types';\nimport TodoItem from './TodoItem';\n// Import modern icons from Lucide React\nimport { Target, Search as SearchIcon } from 'lucide-react';\nimport {\n  DndContext,\n  closestCenter,\n  KeyboardSensor,\n  PointerSensor,\n  useSensor,\n  useSensors,\n  DragEndEvent,\n} from '@dnd-kit/core';\nimport {\n  SortableContext,\n  sortableKeyboardCoordinates,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\n\ninterface TodoListProps {\n  todos: Todo[];\n  onToggle: (id: string) => void;\n  onDelete: (id: string) => void;\n  onReorder?: (startIndex: number, endIndex: number) => void;\n  searchQuery?: string;\n}\n\nexport default function TodoList({ todos, onToggle, onDelete, onReorder, searchQuery }: TodoListProps) {\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  function handleDragEnd(event: DragEndEvent) {\n    if (!onReorder) return;\n    \n    const { active, over } = event;\n\n    if (active.id !== over?.id) {\n      const oldIndex = todos.findIndex((todo) => todo.id === active.id);\n      const newIndex = todos.findIndex((todo) => todo.id === over?.id);\n      \n      onReorder(oldIndex, newIndex);\n    }\n  }\n  if (todos.length === 0) {\n    return (\n      <div id=\"todo-list-empty-message\" className=\"glass-card rounded-2xl p-10 text-center fade-in border border-white/30 w-full\">\n        <div className=\"space-y-4\">\n          <div className=\"text-5xl animate-pulse-custom mb-2\" style={{ display: 'flex', justifyContent: 'center' }}>\n            {searchQuery ? <SearchIcon size={48} color=\"#6b7280\" /> : <Target size={48} color=\"#6b7280\" />}\n          </div>\n          <h3 className=\"text-xl font-bold text-gray-600\">\n            {searchQuery ? 'No matches found' : 'Ready to be productive?'}\n          </h3>\n          <p className=\"text-gray-500\">\n            {searchQuery \n              ? `No todos match \"${searchQuery}\". Try a different search term.`\n              : 'Create your first todo above and start achieving your goals!'\n            }\n          </p>\n          <div className=\"flex justify-center space-x-2 pt-3\">\n            <span className=\"w-2 h-2 bg-purple-400 rounded-full animate-pulse\"></span>\n            <span className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\" style={{animationDelay: '0.2s'}}></span>\n            <span className=\"w-2 h-2 bg-cyan-400 rounded-full animate-pulse\" style={{animationDelay: '0.4s'}}></span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const todoItems = todos.map((todo, index) => (\n    <div \n      key={todo.id} \n      className=\"slide-in\"\n      style={{animationDelay: `${index * 0.05}s`}}\n    >\n      <TodoItem\n        todo={todo}\n        onToggle={onToggle}\n        onDelete={onDelete}\n        showDragHandle={!!onReorder}\n      />\n    </div>\n  ));\n\n  return (\n    <div id=\"todo-list-section\" className=\"fade-in w-full\">\n      {onReorder ? (\n        <DndContext\n          sensors={sensors}\n          collisionDetection={closestCenter}\n          onDragEnd={handleDragEnd}\n        >\n          <SortableContext items={todos} strategy={verticalListSortingStrategy}>\n            <div id=\"todo-list-container\" className=\"space-y-3 w-full\">\n              {todoItems}\n            </div>\n          </SortableContext>\n        </DndContext>\n      ) : (\n        <div id=\"todo-list-container\" className=\"space-y-3 w-full\">\n          {todoItems}\n        </div>\n      )}\n      \n      {todos.length > 0 && (() => {\n        const remainingTodos = todos.filter(todo => !todo.completed).length;\n        \n        if (remainingTodos === 0) {\n          return (\n            <div id=\"todo-list-congratulations-message\" className=\"text-center pt-3 fade-in\">\n              <div className=\"inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-green-100 to-emerald-100 backdrop-blur-sm rounded-full text-sm font-semibold text-green-700 border border-green-200/50 whitespace-nowrap\">\n                <span>🎉</span>\n                <span>Congratulations! All tasks completed!</span>\n                <span>✨</span>\n              </div>\n            </div>\n          );\n        }\n        \n        return (\n          <div id=\"todo-list-footer-message\" className=\"text-center pt-3 fade-in\">\n            <div className=\"inline-flex items-center gap-2 px-3 py-1.5 bg-white/40 backdrop-blur-sm rounded-full text-sm text-gray-600 border border-white/30 whitespace-nowrap\">\n              <span>💪</span>\n              <span>You've {remainingTodos} remaining item{remainingTodos === 1 ? '' : 's'} to complete!</span>\n            </div>\n          </div>\n        );\n      })()}\n    </div>\n  );\n}","// Import React hooks and icons\nimport { useState, useRef, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ChevronDown } from 'lucide-react';\n\n// Interface for combo box options\ninterface ComboBoxOption {\n  value: string;\n  label: string;\n}\n\n// Props interface for ComboBox component\ninterface ComboBoxProps {\n  value: string;\n  onChange: (value: string) => void;\n  options: ComboBoxOption[];\n  placeholder?: string;\n  style?: React.CSSProperties;\n  onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\n/**\n * ComboBox Component\n * \n * A true combo box that combines a text input with a dropdown list:\n * - Users can type custom values directly in the text input\n * - Users can select from predefined options in the dropdown\n * - Supports filtering options as user types\n * - Maintains glass-morphism styling consistent with the app\n */\nexport default function ComboBox({ \n  value, \n  onChange, \n  options, \n  placeholder = \"Type or select...\",\n  style = {},\n  onFocus,\n  onBlur\n}: ComboBoxProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0, width: 0 });\n  const inputRef = useRef<HTMLInputElement>(null);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // Filter options based on input value\n  useEffect(() => {\n    if (!value.trim()) {\n      // Show all options when input is empty\n      setFilteredOptions(options);\n    } else {\n      // Filter options that match the input\n      const filtered = options.filter(option =>\n        option.label.toLowerCase().includes(value.toLowerCase()) ||\n        option.value.toLowerCase().includes(value.toLowerCase())\n      );\n      setFilteredOptions(filtered);\n    }\n  }, [value, options]);\n\n  // Update dropdown position when opening\n  useEffect(() => {\n    if (isOpen && containerRef.current) {\n      const rect = containerRef.current.getBoundingClientRect();\n      setDropdownPosition({\n        top: rect.bottom + window.scrollY + 4,\n        left: rect.left + window.scrollX,\n        width: rect.width\n      });\n    }\n  }, [isOpen]);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        inputRef.current && !inputRef.current.contains(event.target as Node) &&\n        dropdownRef.current && !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Handle input change\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value;\n    onChange(newValue);\n    if (!isOpen) {\n      setIsOpen(true);\n    }\n  };\n\n  // Handle option selection\n  const handleOptionClick = (option: ComboBoxOption) => {\n    onChange(option.value);\n    setIsOpen(false);\n    inputRef.current?.focus();\n  };\n\n  // Handle input focus\n  const handleInputFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    setIsOpen(true);\n    onFocus?.(e);\n  };\n\n  // Handle input blur\n  const handleInputBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    // Delay to allow option clicks to register\n    setTimeout(() => {\n      if (!dropdownRef.current?.contains(document.activeElement)) {\n        setIsOpen(false);\n      }\n    }, 150);\n    onBlur?.(e);\n  };\n\n  // Handle dropdown toggle\n  const handleDropdownToggle = () => {\n    setIsOpen(!isOpen);\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div \n      ref={containerRef}\n      style={{ \n        position: 'relative', \n        width: '100%',\n        zIndex: 1 // Ensure the container has a stacking context\n      }}>\n      {/* Input field with dropdown button */}\n      <div style={{ position: 'relative', display: 'flex', alignItems: 'center' }}>\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={value}\n          onChange={handleInputChange}\n          onFocus={handleInputFocus}\n          onBlur={handleInputBlur}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n              const isExactMatch = options.some(option => \n                option.value.toLowerCase() === value.trim().toLowerCase() || \n                option.label.toLowerCase() === value.trim().toLowerCase()\n              );\n              \n              if (value.trim() && !isExactMatch) {\n                // Add custom category on Enter when typing a new value\n                onChange(value.trim());\n                setIsOpen(false);\n              } else if (filteredOptions.length === 1) {\n                // Auto-select the only matching option on Enter\n                handleOptionClick(filteredOptions[0]);\n              }\n            } else if (e.key === 'Escape') {\n              // Close dropdown on Escape\n              setIsOpen(false);\n              inputRef.current?.blur();\n            }\n          }}\n          placeholder={placeholder}\n          style={{\n            ...style,\n            paddingRight: '40px', // Make room for dropdown button\n            width: '100%'\n          }}\n        />\n        {/* Dropdown toggle button */}\n        <button\n          type=\"button\"\n          onClick={handleDropdownToggle}\n          style={{\n            position: 'absolute',\n            right: '8px',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            background: 'none',\n            border: 'none',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: '4px',\n            color: '#6b7280',\n            transition: 'color 0.2s ease'\n          }}\n          onMouseEnter={(e) => {\n            (e.target as HTMLElement).style.color = '#374151';\n          }}\n          onMouseLeave={(e) => {\n            (e.target as HTMLElement).style.color = '#6b7280';\n          }}\n        >\n          <ChevronDown \n            size={16} \n            style={{\n              transform: isOpen ? 'rotate(180deg)' : 'rotate(0deg)',\n              transition: 'transform 0.2s ease'\n            }}\n          />\n        </button>\n      </div>\n\n      {/* Dropdown list rendered as portal to avoid stacking context issues */}\n      {isOpen && createPortal(\n        <div\n          ref={dropdownRef}\n          style={{\n            position: 'absolute',\n            top: dropdownPosition.top,\n            left: dropdownPosition.left,\n            width: dropdownPosition.width,\n            zIndex: 99999, // Extremely high z-index to ensure it's above everything\n            background: 'rgba(255, 255, 255, 0.98)', // More opaque for better visibility\n            backdropFilter: 'blur(20px)',\n            WebkitBackdropFilter: 'blur(20px)', // Safari support\n            border: '2px solid rgba(255, 255, 255, 0.6)',\n            borderRadius: '12px',\n            boxShadow: '0 12px 40px rgba(0, 0, 0, 0.15)', // Stronger shadow for better separation\n            maxHeight: '200px',\n            overflowY: 'auto',\n            padding: '4px',\n            isolation: 'isolate' // Create new stacking context\n          }}\n        >\n          {/* Show matching options first */}\n          {filteredOptions.map((option) => (\n            <div\n              key={option.value}\n              onClick={() => handleOptionClick(option)}\n              style={{\n                padding: '8px 12px',\n                cursor: 'pointer',\n                borderRadius: '8px',\n                fontSize: '14px',\n                fontWeight: '500',\n                color: '#374151',\n                transition: 'all 0.2s ease',\n                userSelect: 'none'\n              }}\n              onMouseEnter={(e) => {\n                (e.target as HTMLElement).style.background = 'rgba(139, 92, 246, 0.1)';\n                (e.target as HTMLElement).style.color = '#8b5cf6';\n              }}\n              onMouseLeave={(e) => {\n                (e.target as HTMLElement).style.background = 'transparent';\n                (e.target as HTMLElement).style.color = '#374151';\n              }}\n            >\n              {option.label}\n            </div>\n          ))}\n          \n          {/* Show \"Add custom category\" option when typing a value that doesn't exactly match any existing option */}\n          {value.trim() && !options.some(option => \n            option.value.toLowerCase() === value.trim().toLowerCase() || \n            option.label.toLowerCase() === value.trim().toLowerCase()\n          ) && (\n            <>\n              {filteredOptions.length > 0 && (\n                <div style={{ \n                  borderTop: '1px solid rgba(139, 92, 246, 0.2)', \n                  margin: '4px 8px' \n                }} />\n              )}\n              <div\n                onClick={() => {\n                  onChange(value.trim());\n                  setIsOpen(false);\n                  inputRef.current?.focus();\n                }}\n                style={{\n                  padding: '8px 12px',\n                  cursor: 'pointer',\n                  borderRadius: '8px',\n                  fontSize: '14px',\n                  fontWeight: '500',\n                  color: '#8b5cf6',\n                  transition: 'all 0.2s ease',\n                  userSelect: 'none',\n                  background: 'rgba(139, 92, 246, 0.05)',\n                  border: '1px dashed rgba(139, 92, 246, 0.3)'\n                }}\n                onMouseEnter={(e) => {\n                  (e.target as HTMLElement).style.background = 'rgba(139, 92, 246, 0.1)';\n                }}\n                onMouseLeave={(e) => {\n                  (e.target as HTMLElement).style.background = 'rgba(139, 92, 246, 0.05)';\n                }}\n              >\n                🏷️ Add \"{value.trim()}\" as new category\n              </div>\n            </>\n          )}\n          \n          {/* Show helpful message when no input */}\n          {!value.trim() && filteredOptions.length === 0 && (\n            <div\n              style={{\n                padding: '8px 12px',\n                fontSize: '14px',\n                color: '#9ca3af',\n                textAlign: 'center'\n              }}\n            >\n              Type to search or add custom category\n            </div>\n          )}\n        </div>,\n        document.body\n      )}\n    </div>\n  );\n}","// Import React hooks for component state management\nimport { useState } from 'react';\n// Import modern icons from Lucide React\nimport { Plus } from 'lucide-react';\n// Import shared category constants\nimport { CATEGORY_OPTIONS } from '../constants/categories';\n// Import custom ComboBox component\nimport ComboBox from './ComboBox';\n// Import Todo type\nimport { Todo } from '../types';\n\n// Props interface for TodoInput component\ninterface TodoInputProps {\n  onAdd: (text: string, dueDate?: Date, category?: string) => void;  // Callback to add new todos\n  todos: Todo[];  // Existing todos to extract custom categories from\n}\n\n/**\n * TodoInput Component\n * \n * Provides a comprehensive form for creating new todos with:\n * - Main text input for todo description\n * - Optional due date picker\n * - Optional category field\n * - Form validation and submission\n * - Clean, modern glass-morphism design\n * \n * Features multi-row layout with consistent styling\n */\nexport default function TodoInput({ onAdd, todos }: TodoInputProps) {\n  // State management for form inputs\n  const [text, setText] = useState('');           // Main todo text\n  const [dueDate, setDueDate] = useState('');     // Due date as string (HTML date input)\n  const [category, setCategory] = useState('');   // Optional category/tag\n\n  // Generate dynamic category options by combining static options with custom categories from todos\n  const getDynamicCategoryOptions = () => {\n    // Extract unique custom categories from existing todos\n    const customCategories = todos\n      .filter(todo => todo.category && todo.category.trim())\n      .map(todo => todo.category!)\n      .filter((category, index, array) => array.indexOf(category) === index) // Remove duplicates\n      .filter(category => !CATEGORY_OPTIONS.some(option => option.value === category)) // Exclude already existing options\n      .map(category => ({\n        value: category,\n        label: category.includes('🏷️') ? category : `🏷️ ${category}` // Add emoji if not present\n      }));\n\n    // Combine static options with custom categories\n    return [...CATEGORY_OPTIONS, ...customCategories];\n  };\n\n  const dynamicCategoryOptions = getDynamicCategoryOptions();\n\n  // Form submission handler\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();                           // Prevent default form submission\n    const trimmedText = text.trim();              // Remove whitespace\n    \n    if (trimmedText) {                            // Only submit if text is not empty\n      // Convert date string to Date object if provided (fix timezone issues)\n      let parsedDueDate: Date | undefined = undefined;\n      if (dueDate) {\n        // Parse the date string manually to avoid timezone issues\n        const [year, month, day] = dueDate.split('-').map(num => parseInt(num, 10));\n        parsedDueDate = new Date(year, month - 1, day); // month is 0-indexed\n      }\n      // Clean category or set to undefined if empty\n      const trimmedCategory = category.trim() || undefined;\n      \n      // Call parent callback with processed data\n      onAdd(trimmedText, parsedDueDate, trimmedCategory);\n      \n      // Reset form fields after successful submission\n      setText('');\n      setDueDate('');\n      setCategory('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"fade-in w-full\" id=\"todo-input-section\">\n      <div className=\"glass-card rounded-2xl p-4 shadow-2xl border border-white/30 w-full\" id=\"todo-input-container\">\n        <div \n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '12px',\n            width: '100%',\n            boxSizing: 'border-box'\n          }}\n        >\n          {/* Main input row */}\n          <div \n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              height: '56px',\n              width: '100%',\n              flexWrap: 'nowrap',\n              boxSizing: 'border-box'\n            }}\n          >\n          <div \n            style={{\n              flex: '1',\n              minWidth: '0',\n              height: '100%',\n              display: 'flex',\n              alignItems: 'center'\n            }}\n          >\n            <input\n              type=\"text\"\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n              placeholder=\"Add a new item ...\"\n              style={{\n                width: '100%',\n                height: '40px',\n                padding: '0 16px',\n                fontSize: '16px',\n                background: 'rgba(255, 255, 255, 0.6)',\n                backdropFilter: 'blur(8px)',\n                border: '2px solid rgba(255, 255, 255, 0.4)',\n                borderRadius: '12px',\n                outline: 'none',\n                transition: 'all 0.3s ease',\n                boxSizing: 'border-box',\n                fontWeight: '500',\n                color: '#374151'\n              }}\n              onFocus={(e) => {\n                e.target.style.background = 'rgba(255, 255, 255, 0.7)';\n                e.target.style.borderColor = '#8b5cf6';\n                e.target.style.boxShadow = '0 0 0 2px rgba(139, 92, 246, 0.3)';\n              }}\n              onBlur={(e) => {\n                e.target.style.background = 'rgba(255, 255, 255, 0.6)';\n                e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n                e.target.style.boxShadow = 'none';\n              }}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            disabled={!text.trim()}\n            style={{\n              flexShrink: 0,\n              height: '40px',\n              padding: '0 16px',\n              background: 'linear-gradient(135deg, #3b82f6, #8b5cf6, #3b82f6)',\n              backgroundSize: '200% 200%',\n              color: 'white',\n              fontWeight: '600',\n              fontSize: '14px',\n              border: 'none',\n              borderRadius: '12px',\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n              whiteSpace: 'nowrap',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              gap: '4px',\n              outline: 'none',\n              opacity: text.trim() ? 1 : 0.5\n            }}\n            onMouseEnter={(e) => {\n              if (text.trim()) {\n                (e.target as HTMLButtonElement).style.transform = 'scale(1.05)';\n                (e.target as HTMLButtonElement).style.boxShadow = '0 6px 16px rgba(0, 0, 0, 0.2)';\n              }\n            }}\n            onMouseLeave={(e) => {\n              (e.target as HTMLButtonElement).style.transform = 'scale(1)';\n              (e.target as HTMLButtonElement).style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n            }}\n          >\n            <Plus size={16} />\n            <span>Add</span>\n          </button>\n          </div>\n          \n          {/* Additional fields row */}\n          <div \n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              height: '40px',\n              width: '100%',\n              flexWrap: 'nowrap',\n              boxSizing: 'border-box'\n            }}\n          >\n            <div style={{ flex: '1', minWidth: '0' }}>\n              <input\n                type=\"date\"\n                value={dueDate}\n                onChange={(e) => setDueDate(e.target.value)}\n                placeholder=\"Due date\"\n                style={{\n                  width: '100%',\n                  height: '40px',\n                  padding: '0 12px',\n                  fontSize: '14px',\n                  background: 'rgba(255, 255, 255, 0.6)',\n                  backdropFilter: 'blur(8px)',\n                  border: '2px solid rgba(255, 255, 255, 0.4)',\n                  borderRadius: '12px',\n                  outline: 'none',\n                  transition: 'all 0.3s ease',\n                  boxSizing: 'border-box',\n                  fontWeight: '500',\n                  color: '#374151'\n                }}\n                onFocus={(e) => {\n                  e.target.style.background = 'rgba(255, 255, 255, 0.7)';\n                  e.target.style.borderColor = '#8b5cf6';\n                  e.target.style.boxShadow = '0 0 0 2px rgba(139, 92, 246, 0.3)';\n                }}\n                onBlur={(e) => {\n                  e.target.style.background = 'rgba(255, 255, 255, 0.6)';\n                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n                  e.target.style.boxShadow = 'none';\n                }}\n              />\n            </div>\n            <div style={{ flex: '1', minWidth: '0' }}>\n              <ComboBox\n                value={category}\n                onChange={setCategory}\n                options={dynamicCategoryOptions}\n                placeholder=\"Type or select category...\"\n                style={{\n                  height: '40px',\n                  padding: '0 12px',\n                  fontSize: '14px',\n                  background: 'rgba(255, 255, 255, 0.6)',\n                  backdropFilter: 'blur(8px)',\n                  border: '2px solid rgba(255, 255, 255, 0.4)',\n                  borderRadius: '12px',\n                  outline: 'none',\n                  transition: 'all 0.3s ease',\n                  boxSizing: 'border-box',\n                  fontWeight: '500',\n                  color: '#374151'\n                }}\n                onFocus={(e) => {\n                  e.target.style.background = 'rgba(255, 255, 255, 0.7)';\n                  e.target.style.borderColor = '#8b5cf6';\n                  e.target.style.boxShadow = '0 0 0 2px rgba(139, 92, 246, 0.3)';\n                }}\n                onBlur={(e) => {\n                  e.target.style.background = 'rgba(255, 255, 255, 0.6)';\n                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n                  e.target.style.boxShadow = 'none';\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}","// Import React hooks and types\nimport { useState, useEffect, useRef } from 'react';\nimport { Todo } from '../types';\nimport { generateId } from '../utils';\n\n// Local storage key for persisting todos\nconst STORAGE_KEY = 'react-todo-app-todos';\n\n/**\n * useTodos Hook\n * \n * Custom hook that provides complete todo management functionality:\n * - CRUD operations (Create, Read, Update, Delete)\n * - Local storage persistence\n * - Drag and drop reordering\n * - Statistics calculation\n * - Type-safe operations with TypeScript\n * \n * Returns all necessary functions and state for todo management\n */\nexport function useTodos() {\n  // Main todos state - array of Todo objects\n  const [todos, setTodos] = useState<Todo[]>([]);\n  // Ref to track if initial load has completed\n  const isInitialized = useRef(false);\n  // Track if this is the first render\n  const isFirstRender = useRef(true);\n\n  // Load todos from localStorage on mount\n  useEffect(() => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      if (stored) {\n        const parsedTodos = JSON.parse(stored).map((todo: any) => ({\n          ...todo,\n          createdAt: new Date(todo.createdAt),\n          dueDate: todo.dueDate ? new Date(todo.dueDate) : undefined\n        }));\n        setTodos(parsedTodos);\n      }\n    } catch (error) {\n      console.error('Failed to load todos from localStorage:', error);\n    }\n  }, []);\n\n  // Save todos to localStorage whenever todos change (but not on initial load)\n  useEffect(() => {\n    // Skip saving on the very first render (initial mount)\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      isInitialized.current = true;\n      return;\n    }\n    \n    // Now we can safely save on subsequent changes\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(todos));\n    } catch (error) {\n      console.error('Failed to save todos to localStorage:', error);\n    }\n  }, [todos]);\n\n  const addTodo = (text: string, dueDate?: Date, category?: string) => {\n    const newTodo: Todo = {\n      id: generateId(),\n      text,\n      completed: false,\n      createdAt: new Date(),\n      dueDate,\n      category,\n    };\n    setTodos(prev => [newTodo, ...prev]);\n  };\n\n  const toggleTodo = (id: string) => {\n    setTodos(prev => \n      prev.map(todo => \n        todo.id === id \n          ? { ...todo, completed: !todo.completed }\n          : todo\n      )\n    );\n  };\n\n  const deleteTodo = (id: string) => {\n    setTodos(prev => prev.filter(todo => todo.id !== id));\n  };\n\n  const reorderTodos = (startIndex: number, endIndex: number) => {\n    setTodos(prev => {\n      const result = Array.from(prev);\n      const [removed] = result.splice(startIndex, 1);\n      result.splice(endIndex, 0, removed);\n      return result;\n    });\n  };\n\n  const completedCount = todos.filter(todo => todo.completed).length;\n  const totalCount = todos.length;\n\n  return {\n    todos,\n    addTodo,\n    toggleTodo,\n    deleteTodo,\n    reorderTodos,\n    completedCount,\n    totalCount,\n  };\n}","// Import components and hooks\nimport { TodoInput, TodoList } from './components';\nimport { useTodos } from './hooks';\nimport { useState } from 'react';\n// Import modern icons from Lucide React\nimport { Search, X, CheckSquare2 } from 'lucide-react';\n\n/**\n * Main App Component\n * \n * Root component that orchestrates the entire todo application:\n * - Manages global state through useTodos hook\n * - Provides search functionality across todos\n * - Renders all major UI sections with glass-morphism design\n * - Handles responsive layout and animations\n * - Integrates drag-and-drop, filtering, and statistics\n */\nfunction App() {\n  // Initialize todo management hook with full CRUD operations\n  const { todos, addTodo, toggleTodo, deleteTodo, reorderTodos, totalCount } = useTodos();\n  \n  // Search functionality state\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  // Filter todos based on search query (searches both text and category)\n  const filteredTodos = todos.filter(todo => \n    todo.text.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    (todo.category && todo.category.toLowerCase().includes(searchQuery.toLowerCase()))\n  );\n  \n  // Calculate statistics based on current view (filtered results or all todos)\n  const displayTodos = searchQuery ? filteredTodos : todos;\n  const displayCompletedCount = displayTodos.filter(todo => todo.completed).length;\n  const displayTotalCount = displayTodos.length;\n\n  return (\n    <div \n      className=\"w-screen h-screen bg-gradient-to-br from-indigo-50 via-white to-cyan-50 relative\"\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }}\n    >\n      {/* Animated background elements */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"absolute -top-40 -right-32 w-96 h-96 bg-gradient-to-br from-purple-400 to-pink-400 rounded-full opacity-20 animate-pulse\"></div>\n        <div className=\"absolute -bottom-40 -left-32 w-96 h-96 bg-gradient-to-br from-blue-400 to-cyan-400 rounded-full opacity-20 animate-pulse\" style={{animationDelay: '1s'}}></div>\n      </div>\n      \n      {/* Content container */}\n      <div className=\"relative z-10 w-full max-w-5xl p-4\">\n        <header className=\"text-center mb-6 fade-in\">\n          <div className=\"flex items-center justify-center gap-3 mb-2\">\n            <CheckSquare2 \n              size={48} \n              className=\"text-purple-600\" \n              style={{\n                filter: 'drop-shadow(0 4px 8px rgba(139, 92, 246, 0.3))'\n              }}\n            />\n            <h1 className=\"text-4xl lg:text-5xl font-black bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-600 bg-clip-text text-transparent\">\n              Todo Master\n            </h1>\n          </div>\n          <div className=\"h-1 w-24 bg-gradient-to-r from-purple-600 to-cyan-600 mx-auto rounded-full mb-2\"></div>\n          <p className=\"text-base lg:text-lg text-gray-600 font-medium\">Transform your productivity with style</p>\n        </header>\n\n        <div className=\"w-full max-w-5xl mx-auto space-y-4\">\n          <TodoInput onAdd={addTodo} todos={todos} />\n\n          {/* Search Input */}\n          {totalCount > 0 && (\n            <div className=\"glass-card rounded-2xl p-3 fade-in border border-white/30 w-full\">\n              <div \n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '12px',\n                  height: '40px',\n                  width: '100%',\n                  boxSizing: 'border-box'\n                }}\n              >\n                <Search size={18} style={{ flexShrink: 0, color: '#6b7280' }} />\n                <input\n                  type=\"text\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  placeholder=\"Search todos by text or category...\"\n                  style={{\n                    flex: 1,\n                    height: '36px',\n                    padding: '0 12px',\n                    fontSize: '14px',\n                    background: 'rgba(255, 255, 255, 0.6)',\n                    backdropFilter: 'blur(8px)',\n                    border: '2px solid rgba(255, 255, 255, 0.4)',\n                    borderRadius: '12px',\n                    outline: 'none',\n                    transition: 'all 0.3s ease',\n                    boxSizing: 'border-box',\n                    fontWeight: '500',\n                    color: '#374151'\n                  }}\n                  onFocus={(e) => {\n                    e.target.style.background = 'rgba(255, 255, 255, 0.7)';\n                    e.target.style.borderColor = '#8b5cf6';\n                    e.target.style.boxShadow = '0 0 0 2px rgba(139, 92, 246, 0.3)';\n                  }}\n                  onBlur={(e) => {\n                    e.target.style.background = 'rgba(255, 255, 255, 0.6)';\n                    e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n                    e.target.style.boxShadow = 'none';\n                  }}\n                />\n                {searchQuery && (\n                  <button\n                    onClick={() => setSearchQuery('')}\n                    style={{\n                      flexShrink: 0,\n                      width: '28px',\n                      height: '28px',\n                      border: 'none',\n                      borderRadius: '50%',\n                      background: 'rgba(156, 163, 175, 0.2)',\n                      color: '#6b7280',\n                      fontSize: '14px',\n                      cursor: 'pointer',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      outline: 'none',\n                      transition: 'all 0.3s ease'\n                    }}\n                    onMouseEnter={(e) => {\n                      (e.target as HTMLButtonElement).style.background = 'rgba(156, 163, 175, 0.3)';\n                    }}\n                    onMouseLeave={(e) => {\n                      (e.target as HTMLButtonElement).style.background = 'rgba(156, 163, 175, 0.2)';\n                    }}\n                    title=\"Clear search\"\n                  >\n                    <X size={14} />\n                  </button>\n                )}\n              </div>\n            </div>\n          )}\n\n          {totalCount > 0 && (\n            <div id=\"stats-bar-section\" className=\"glass-card rounded-2xl p-4 slide-in border border-white/30 w-full\">\n              <div \n                id=\"stats-bar-container\"\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  height: '40px',\n                  width: '100%',\n                  flexWrap: 'nowrap',\n                  gap: '16px',\n                  boxSizing: 'border-box'\n                }}\n              >\n                <div \n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '16px',\n                    flexShrink: 1,\n                    minWidth: '0'\n                  }}\n                >\n                  <span \n                    style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '6px',\n                      whiteSpace: 'nowrap',\n                      fontSize: '14px',\n                      fontWeight: '600',\n                      color: '#374151'\n                    }}\n                  >\n                    <span \n                      style={{\n                        width: '8px',\n                        height: '8px',\n                        background: '#3b82f6',\n                        borderRadius: '50%',\n                        animation: 'pulse 2s infinite'\n                      }}\n                    ></span>\n                    Total: {displayTotalCount}\n                  </span>\n                  <span \n                    style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '6px',\n                      whiteSpace: 'nowrap',\n                      fontSize: '14px',\n                      fontWeight: '600',\n                      color: '#374151'\n                    }}\n                  >\n                    <span \n                      style={{\n                        width: '8px',\n                        height: '8px',\n                        background: '#10b981',\n                        borderRadius: '50%',\n                        animation: 'pulse 2s infinite'\n                      }}\n                    ></span>\n                    Done: {displayCompletedCount}\n                  </span>\n                </div>\n                <div \n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '12px',\n                    flexShrink: 0\n                  }}\n                >\n                  <div \n                    style={{\n                      width: '80px',\n                      height: '8px',\n                      background: 'rgba(209, 213, 219, 0.8)',\n                      borderRadius: '20px',\n                      overflow: 'hidden',\n                      boxShadow: 'inset 0 1px 3px rgba(0, 0, 0, 0.1)'\n                    }}\n                  >\n                    <div \n                      style={{\n                        height: '100%',\n                        background: 'linear-gradient(90deg, #34d399, #3b82f6, #8b5cf6)',\n                        borderRadius: '20px',\n                        transition: 'width 0.7s ease-out',\n                        width: `${displayTotalCount > 0 ? (displayCompletedCount / displayTotalCount) * 100 : 0}%`\n                      }}\n                    ></div>\n                  </div>\n                  <span \n                    style={{\n                      fontSize: '14px',\n                      fontWeight: '700',\n                      color: '#4b5563',\n                      whiteSpace: 'nowrap'\n                    }}\n                  >\n                    {displayTotalCount > 0 ? Math.round((displayCompletedCount / displayTotalCount) * 100) : 0}%\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <TodoList \n            todos={searchQuery ? filteredTodos : todos} \n            onToggle={toggleTodo} \n            onDelete={deleteTodo} \n            onReorder={searchQuery ? undefined : reorderTodos} \n            searchQuery={searchQuery}\n          />\n\n          {/* Footer */}\n          <footer className=\"mt-8 text-center fade-in\">\n            <div className=\"glass-card rounded-2xl p-4 border border-white/30\">\n              <div className=\"space-y-2\">\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Created by <span className=\"font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent\">Krishna Vyas</span>\n                </p>\n                <p className=\"text-xs text-gray-500\">\n                  © {new Date().getFullYear()} All rights reserved.\n                </p>\n              </div>\n            </div>\n          </footer>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","client","createRoot","hydrateRoot","CATEGORY_OPTIONS","value","label","getCategoryLabel","option","find","opt","test","calculateTimeRemaining","dueDate","now","Date","dueDateEndOfDay","setHours","diffMs","getTime","isOverdue","absDiffMs","Math","abs","totalMinutes","floor","days","hours","minutes","Timer","isCompleted","timeRemaining","setTimeRemaining","useState","useEffect","updateTimer","interval","setInterval","clearInterval","formattedTime","formatTimeRemaining","isUrgent","style","display","alignItems","gap","padding","borderRadius","fontSize","fontWeight","whiteSpace","background","color","border","transition","title","toLocaleDateString","children","AlertTriangle","size","Clock","TodoItem","todo","onToggle","onDelete","showDragHandle","attributes","listeners","setNodeRef","transform","isDragging","useSortable","id","CSS","Transform","toString","opacity","className","completed","boxSizing","justifyContent","height","width","flexWrap","overflow","flexShrink","cursor","GripVertical","checked","onChange","htmlFor","borderColor","Check","flex","minWidth","text","textOverflow","textDecoration","Fragment","Calendar","category","Tag","onClick","outline","boxShadow","onMouseEnter","target","onMouseLeave","Trash2","TodoList","todos","onReorder","searchQuery","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","length","SearchIcon","Target","animationDelay","todoItems","map","index","DndContext","collisionDetection","closestCenter","onDragEnd","event","active","over","oldIndex","findIndex","newIndex","SortableContext","items","strategy","verticalListSortingStrategy","remainingTodos","filter","ComboBox","options","placeholder","onFocus","onBlur","isOpen","setIsOpen","filteredOptions","setFilteredOptions","dropdownPosition","setDropdownPosition","top","left","inputRef","useRef","dropdownRef","containerRef","trim","filtered","toLowerCase","includes","rect","getBoundingClientRect","bottom","window","scrollY","scrollX","handleClickOutside","contains","document","addEventListener","removeEventListener","handleOptionClick","focus","position","zIndex","newValue","setTimeout","activeElement","onKeyDown","preventDefault","isExactMatch","some","blur","paddingRight","right","ChevronDown","createPortal","backdropFilter","WebkitBackdropFilter","maxHeight","overflowY","isolation","userSelect","borderTop","margin","textAlign","body","TodoInput","onAdd","setText","setDueDate","setCategory","dynamicCategoryOptions","customCategories","array","indexOf","getDynamicCategoryOptions","onSubmit","trimmedText","parsedDueDate","year","month","day","split","num","parseInt","trimmedCategory","flexDirection","disabled","backgroundSize","Plus","STORAGE_KEY","App","addTodo","toggleTodo","deleteTodo","reorderTodos","totalCount","setTodos","isInitialized","isFirstRender","stored","localStorage","getItem","parsedTodos","JSON","parse","createdAt","error","console","setItem","stringify","completedCount","newTodo","random","substring","prev","startIndex","endIndex","result","Array","from","removed","splice","useTodos","setSearchQuery","filteredTodos","displayTodos","displayCompletedCount","displayTotalCount","CheckSquare2","Search","X","animation","round","getFullYear","ReactDOM","getElementById","render","React","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2]}